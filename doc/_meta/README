Setting up the application to run the first time
================================================
Local machine setup
-------------------
cd ~/Projects/Rails/Sangwapo
cp config/examples/database.yml config # Setup the database
cp config/examples/config.yml config # Setup the configuration files
cp config/examples/deploy.rb config # Setup the capistrano deployment recipe
cp config/examples/deploy/*.rb config/deploy # Setup deployment stage configuration

Set up the hosts (/etc/hosts)
127.0.0.1	sangwapo.dev		www.sangwapo.dev

Setup deployment references:
git remote add virtual deploy@rails.vm:/var/Repositories/Git/Sangwapo.git
git remote add staging deploy@genesis.vps:/var/Repositories/Git/Sangwapo.git
git remote add production deploy@genesis.vps:/var/Repositories/Git/Sangwapo.git

Virtual machine setup
---------------------
Need:
Git
ImageMagick
MySQL					# Remember to install libmysqlclient-dev (for the mysql2 gem to work)
nginx
nodejs				# JavaScript runtime
RVM
SSH


Test SSH access:
ssh deploy@rails.vm
ssh vladimir@rails.vm

Set up the hosts (/etc/hosts):
ssh vladimir@rails.vm
127.0.0.1 sangwapo.virtual 	www.sangwapo.virtual

Check that SSH "loops back" on the virtual machine (host key verification):
# On the local development machine
ssh deploy@rails.vm

# On the virtual machine
ssh deploy@rails.vm

Create the Git repository:
ssh deploy@rails.vm
cd /var/Repositories/Git/
mkdir Sangwapo.git
cd Sangwapo.git
git init --bare

Push to the Git repository:
# From the development machine:
cd ~/Projects/Rails/Sangwapo
git push virtual master

Configure nginx:
cd ~/Projects/Rails/Sangwapo/config/examples/nginx
scp nginx.sangwapo.virtual.conf vladimir@rails.vm:~/sangwapo.virtual.conf


# Set up the nginx configuration
ssh vladimir@rails.vm

sudo mv ~/sangwapo.virtual.conf /etc/nginx/sites-available
sudo ln -nfs /etc/nginx/sites-available/sangwapo.virtual.conf /etc/nginx/sites-enabled/sangwapo.virtual


Generate an SSL certificate and key:
sudo mkdir -p /etc/nginx/ssl
cd /etc/nginx/ssl
sudo mkdir -p Sangwapo
cd Sangwapo
sudo openssl genrsa -des3 -out sangwapo.virtual.key 1024

		pass phrase: sangwapo

sudo openssl req -new -key sangwapo.virtual.key -out sangwapo.virtual.csr

		Country Name: ZM
		Province: Lusaka Province
		Locality Name: Lusaka
		Organisation Name: Sangwapo Online Classifieds
		Orgnisational Unit Name: <Blank>
		Common Name: sangwapo.virtual.
		Email: itsupport@pencilcasestudios.com
		Challenge password: <Blank>
		Optional Company Name: <Blank>

sudo cp sangwapo.virtual.key sangwapo.virtual.key.original
sudo openssl rsa -in sangwapo.virtual.key.original -out sangwapo.virtual.key
sudo openssl x509 -req -days 365 -in sangwapo.virtual.csr -signkey sangwapo.virtual.key -out sangwapo.virtual.crt


Test the nginx configuration:
sudo nginx -t

If all is well, load the new nginx configuration:
sudo /etc/init.d/nginx reload

Setup the MySQL database user:
ssh vladimir@rails.vm
mysql -u root -p
create user 'sangwapo'@'localhost' identified by 'VirtualSangwapoPassword';
grant all on Sangwapo_virtual.* to 'sangwapo'@'localhost';
grant all on Sangwapo_virtual_development.* to 'sangwapo'@'localhost';
grant all on Sangwapo_virtual_test.* to 'sangwapo'@'localhost';

Setup the MySQL database:
mysql -u sangwapo -p
create database Sangwapo_virtual;
create database Sangwapo_virtual_development;
create database Sangwapo_virtual_test;

Setup the Monit scripts:
# From the development machine
cd ~/Projects/Rails/Sangwapo/config/examples
scp delayed_job.sangwapo.virtual.monitrc vladimir@rails.vm:~
cd ~/Projects/Rails/Sangwapo
ssh vladimir@rails.vm

# From the virtual machine
sudo mv ~/delayed_job.sangwapo.virtual.monitrc /etc/monit/conf.d/
sudo /etc/init.d/monit syntax


Setup the YAML configuration files:
# From the development machine
cd ~/Projects/Rails/Sangwapo/config/examples
scp config.virtual.yml deploy@rails.vm:~/config.yml
scp database.virtual.yml deploy@rails.vm:~/database.yml
cd ~/Projects/Rails/Sangwapo/
ssh deploy@rails.vm

# From the virtual machine (as the deploy user)
cd ~
mkdir -p ~/Projects/Configurations/Sangwapo/virtual
mv database.yml ~/Projects/Configurations/Sangwapo/virtual/
mv config.yml ~/Projects/Configurations/Sangwapo/virtual/

# From the development machine
# Capistrano steps for initial deployment
# VIRTUAL MACHINE DEPLOYMENT
git checkout master
git merge dev
git push
git push virtual # May need to 'git push virtual master'
cap deploy:setup # Update configuration files and create the database after this

# From the virtual machine (as the deploy user)
# After running cap deploy:setup
cd ~/Projects/Configurations/Sangwapo/virtual
cp *.yml /var/Apps/Sangwapo/virtual/shared/config/

cap deploy:check
cap deploy:update
# Create databases
cap deploy:migrate
cap db:seed
cap deploy:start


# After deploying the app
# From the virtual machine
sudo /etc/init.d/monit reload









Testing
=======
# Guard for testing
cd ~/Projects/Clients/Sangwapo
bundle update
gem cleanup
rake db:drop
rake db:setup
rake db:test:prepare
bundle exec guard




Gem management
==============
MAINTAIN GEM BUNDLE
bundle update
gem cleanup

DELETE ALL INSTALLED GEMS
gem list | cut -d" " -f1 | xargs gem uninstall -aIx




Application Deployment
======================
# Capistrano steps for initial deployment
# VIRTUAL MACHINE DEPLOYMENT
git checkout master
git merge dev
git push
git push virtual				# May need to 'git push virtual master'
cap deploy:setup        # Update configuration files and create the database after this
cap deploy:check
cap deploy:update
cap deploy:migrate
cap deploy:start

# Capistrano for non-initial deployment
# STAGING DEPLOYMENT
git checkout master
git merge dev
git push
git push production
cap deploy

# Capistrano for non-initial deployment
# PRODUCTION DEPLOYMENT
git checkout master
git merge dev
git push
git push production
cap production deploy
git tag "`date +published_%Y-%m-%d_%H%M%S`"




Running the Application
=======================
rails server # In one terminal window - to run the application
rake jobs:work # In another terminal window - to run delayed job
